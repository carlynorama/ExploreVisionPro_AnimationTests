#usda 1.0
(
    autoPlay = false
    customLayerData = {
        dictionary Apple = {
            int preferredIblVersion = 2
        }
        string creator = "usdzconvert preview 0.67"
    }
    defaultPrim = "AnimatedCube"
    endTimeCode = 48
    metersPerUnit = 1
    playbackMode = "loop"
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "AnimatedCube" (
    active = true
    assetInfo = {
        string name = "AnimatedCube"
    }
    kind = "component"
)
{
    def "Materials" (
        prepend references = @./materials.usd@
    )
    {
    }

    def Scope "Geom"
    {
        def Mesh "AnimatedCube" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 0
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
            rel material:binding = </AnimatedCube/Materials/green>
            point3f[] points = [(1, -1, 1), (-1, -1, -1), (1, -1, -1), (-1, 1, -1), (0.999999, 1, 1.000001), (1, 1, -0.999999), (1, 1, -0.999999), (1, -1, 1), (1, -1, -1), (0.999999, 1, 1.000001), (-1, -1, 1), (1, -1, 1), (-1, -1, 1), (-1, 1, -1), (-1, -1, -1), (1, -1, -1), (-1, 1, -1), (1, 1, -0.999999), (1, -1, 1), (-1, -1, 1), (-1, -1, -1), (-1, 1, -1), (-1, 1, 1), (0.999999, 1, 1.000001), (1, 1, -0.999999), (0.999999, 1, 1.000001), (1, -1, 1), (0.999999, 1, 1.000001), (-1, 1, 1), (-1, -1, 1), (-1, -1, 1), (-1, 1, 1), (-1, 1, -1), (1, -1, -1), (-1, -1, -1), (-1, 1, -1)]
            normal3f[] primvars:normals = [(-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0.000001), (1, 0, 0.000001), (1, 0, 0.000001), (-0, 0, 1), (-0, 0, 1), (-0, 0, 1), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "vertex"
            )
            texCoord2f[] primvars:st = [(0, 1), (-1, 0), (0, 0), (0, 1), (1, 2), (1, 1), (1, 1), (0, 2), (1, 2), (1, 1), (-0, 2), (1, 2), (0, 1), (1, 0), (1, 1), (0, 1), (-1, 0), (0, 0), (0, 1), (-1, 1), (-1, 0), (0, 1), (-0, 2), (1, 2), (1, 1), (-0, 1), (0, 2), (1, 1), (-0, 1), (-0, 2), (0, 1), (0, 0), (1, 0), (0, 1), (-1, 1), (-1, 0)] (
                interpolation = "vertex"
            )
            uniform token subdivisionScheme = "none"
            quatf xformOp:orient = (0, 0, -1, 0)
            quatf xformOp:orient.timeSamples = {
                0: (1, 0, 0, 0),
                24: (-4.371139e-8, 0, 1, 0),
                48: (-1, 0, -8.742278e-8, 0),
            }
            uniform token[] xformOpOrder = ["xformOp:orient"]
        }
    }
}

